datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}

model Student {
  id            Int             @id @default(autoincrement())
  studentNumber String          @unique @db.VarChar(255)
  firstName     String          @db.VarChar(255)
  middleName    String?         @db.VarChar(255)
  lastName      String          @db.VarChar(255)
  extensionName String?         @db.VarChar(10)
  password      String          @db.VarChar(255) 
  sections      StudentSection[]
  uploads       Upload[]
}

model Upload {
  id          Int      @id @default(autoincrement())
  title       String?  @db.VarChar(255)
  description String   @db.VarChar(255)
  type        String   @db.VarChar(100)
  link        String   @db.VarChar(255)
  instructor  Instructor @relation(fields: [instructorID], references: [id])
  instructorID Int
  subject     Subject  @relation(fields: [subjectID], references: [subjectID])
  subjectID   Int @default(1)
  student     Student  @relation(fields: [studentId], references: [id])
  studentId   Int
}

model Instructor {
  id           Int      @id @default(autoincrement())
  username     String   @unique @db.VarChar(255)
  password     String   @db.VarChar(255)
  firstName    String   @db.VarChar(255)
  middleName   String?  @db.VarChar(255)
  lastName     String   @db.VarChar(255)
  extensionName String?  @db.VarChar(10)
  uploads      Upload[]
  subjects     InstructorSubject[]
}

model Subject {
  subjectID   Int                @id @default(autoincrement())
  title       String             @db.VarChar(255)
  uploads     Upload[]
  instructors InstructorSubject[]
  
}

model InstructorSubject {
  id           Int        @id @default(autoincrement())
  instructor   Instructor @relation(fields: [instructorId], references: [id])
  instructorId Int
  subject      Subject    @relation(fields: [subjectId], references: [subjectID])
  subjectId    Int
  semester     String     @db.VarChar(50)
  year         String     @db.VarChar(50)
  assignedAt   DateTime   @default(now())
  sections     Section[]
}

model Section {
  id                Int                @id @default(autoincrement())
  name              String             @db.VarChar(100)
  instructorSubject InstructorSubject  @relation(fields: [instructorSubjectId], references: [id])
  instructorSubjectId Int
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @updatedAt
  @@unique([instructorSubjectId, name])
}

model StudentSection {
  section   Section @relation(fields: [sectionId], references: [id])
  sectionId Int
  student   Student @relation(fields: [studentId], references: [id])
  studentId Int
  
  @@id([sectionId, studentId])
}

model Admin {
  adminID  Int    @id @default(autoincrement()) 
  username String @unique @db.VarChar(255) @default("admin")
  password String @db.VarChar(255) @default("admin")
}